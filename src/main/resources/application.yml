server:
  port: 8090  #修改端口号
  servlet:
    session:
      timeout: 21600


spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource            # 当前数据源操作类型
    driver-class-name: com.mysql.cj.jdbc.Driver           # mysql驱动包
    url: jdbc:mysql://localhost:3306/blogdata?useUnicode=true&characterEncoding=utf8&useSSL=true&serverTimezone=GMT              # 数据库名称
    username: root
    password: 123456
    dbcp2:
      min-idle: 5                                           # 数据库连接池的最小维持连接数
      initial-size: 5                                       # 初始化连接数
      max-total: 5                                          # 最大连接数
      max-wait-millis: 20000                                 # 等待连接获取的最大超时时间
  # redis配置
  redis:
    host: 127.0.0.1
    port: 6379
    password:
  # mq配置
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  # 邮箱配置
  mail:
    host: smtp.qq.com
    username: sendmail_post@qq.com
    password: aepsgqiqppfqeacg
    default-encoding: UTF-8
    port: 587
    properties:
      mail:
      smtp:
      auth: true
      socketFactory:
      class: javax.net.ssl.SSLSocketFactory
  # 上传图片大小限制
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size:  10MB


#mybatis-plush配置
mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    map-underscore-to-camel-case: true

# 搜索模式 可选 elasticsearch或mysql
search:
  mode: mysql

# 上传模式 可选 oss或local  （/一定不能去！！！）
upload:
  mode: oss
  local:
    # nginx映射本地文件路径，无域名则为 ip +端口
    url: http://你的文件上传子域名/
    # 本地文件存储路径
    path: /usr/local/upload/
  oss:
    #    url: https://OSS域名/
    #    endpoint: OSS配置endpoint
    #    accessKeyId: OSS配置accessKeyId
    #    accessKeySecret: OSS配置accessKeySecret
    #    bucketName: OSS配置bucketName


# 网站前台域名（邮件通知用）
website:
  url: http://127.0.0.1

#第三方配置信息
qq:
  app-id: QQ APPID
  check-token-url: https://graph.qq.com/oauth2.0/me?access_token={access_token}
  user-info-url: https://graph.qq.com/user/get_user_info?openid={openid}&access_token={access_token}&oauth_consumer_key={oauth_consumer_key}

weibo:
  app-id: 微博APPID
  app-secret: 微博APPSECRET
  grant-type: authorization_code
  redirect-url: 微博回调地址
  access-token-url: https://api.weibo.com/oauth2/access_token
  user-info-url: https://api.weibo.com/2/users/show.json?uid={uid}&access_token={access_token}
